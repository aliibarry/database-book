[["ui.html", "Chapter 3 User Interface 3.1 Basic structure 3.2 Header 3.3 Sidebar 3.4 Body", " Chapter 3 User Interface img { display:block; float:none; margin-left:auto; margin-right:auto; } Write descriptions for each dataset and save them in .\\des\\DATASETNAME.Rhtml Modify titles and descriptions At the most basic level, no changes are needed here, although customization is recommended (eg. choose a title, add descriptions). Throughout this app, description files for each page are loaded in as .Rhtml or .Rmd files, which can be rendered in R. # example descriptions includeHTML(&quot;network.Rhtml&quot;) includeMarkdown(&quot;userguide.Rmd&quot;) Details are below, and basic UI tutorials can be found at https://shiny.rstudio.com/tutorial/written-tutorial/lesson1/. 3.1 Basic structure A Shiny dashboard UI typically consists of three main parts, contained within dashboardPage: Dashboard header: This is the top part of the dashboard, which contains the logo or title of the dashboard, and any navigation menus or links. Dashboard sidebar: This is the vertical bar on the left-hand side of the dashboard that contains input controls, such as buttons, sliders, dropdown menus, or text inputs. The sidebar allows users to interact with the dashboard and filter or manipulate the data displayed in the main panel. Dashboard body/main panel: This is the main part of the dashboard, which displays the data or visualizations based on the input controls selected in the sidebar. The main panel can contain any type of output, such as plots, tables, or text, and can be updated dynamically based on user input. Places commented in red texts are sites for customisation. Otherwise, this does not need to be modified 3.2 Header shinydashboard::dashboardHeader(title= &quot;The Database&quot;, ## Customise title titleWidth = 225) 3.3 Sidebar The sidebar contains a gene search input and tabs, which allow you to switch between different pages. The names of each tab can be customised by changing the label. ### this doesn&#39;t need to be altered, unless you want a footer or to change labels shinydashboard::dashboardSidebar(width = 225, sidebarMenu( id = &quot;tabs&quot;, # gene search shiny::selectizeInput( inputId = &quot;geneid&quot;, label = &quot;Search Genes:&quot;, multiple = TRUE, choices = NULL ), # file upload shiny::fileInput(&quot;file&quot;, label = &quot;Upload File:&quot;, accept = c( &#39;text/csv&#39;, &#39;text/comma-separated-values&#39;, &#39;text/tab-separated-values&#39;, &#39;text/plain&#39;, &#39;.csv&#39;, &#39;.txt&#39;, &#39;.tsv&#39;)), # clear button actionButton(&quot;reset&quot;, &quot;Clear&quot;), # Filters for dataset shiny::selectizeInput( inputId = &quot;sex&quot;, label = &quot;Select Sex:&quot;, choices = c(&#39;Both&#39;, &#39;Separate&#39;), selected = &#39;Both&#39;), # Sidebar menu for tabs (pages) shinydashboard::menuItem(&quot;Home&quot;, tabName = &quot;tabhome&quot;, icon = icon(&quot;home&quot;), badgeLabel = &quot;Start Here!&quot;, badgeColor = &quot;green&quot;), shinydashboard::menuItem(&quot;Grouped Analysis&quot;, tabName = &quot;tabmeta&quot;, icon = icon(&quot;dashboard&quot;)), shinydashboard::menuItem(&quot;Individual Analysis&quot;, tabName = &quot;tabdata&quot;, icon = icon(&quot;database&quot;)), shinydashboard::menuItem(&quot;Network Analysis&quot;, tabName = &quot;tabnet&quot;, icon = icon(&quot;circle-nodes&quot;)), shinydashboard::menuItem(&quot;User Guide&quot;, tabName = &quot;tabcode&quot;, icon = icon(&quot;folder-open&quot;)), shinydashboard::menuItem(&quot;Contact&quot;, tabName = &quot;tabguide&quot;, icon = icon(&quot;circle-nodes&quot;)), br(), br() ), ## Footer can be added ) 3.4 Body In the body, the tabItems with corresponding values for tabName: ### structure overview, each tab described below dashboardBody( tabItems( # First tab content tabItem(tabName = &quot;tabhome&quot;, # content ), # Second tab content tabItem(tabName = &quot;tabmeta&quot;, # content ), # other tabs ) ) 3.4.1 Homepage The homepage displays the title and general description of the app, which can be customised by the user at places commented in red text. shinydashboard::tabItem(tabName = &quot;tabhome&quot;, shinydashboard::box( width = 12, status = &quot;primary&quot;, column(width = 6, offset = 4, ## place for adding titles h1(strong(&quot;Title&quot;))), column(width = 8, offset = 2, ## place for customising descriptions h4(&quot;ADD TEXT&quot;) ), column(width = 4, offset = 4, actionButton(&quot;metaa&quot;,&quot;Meta Analysis&quot;, class = &quot;btn-success btn-lg btn-block&quot;, icon = icon(&quot;dashboard&quot;)), actionButton(&quot;inda&quot;,&quot;Individual Analysis&quot;, class = &quot;btn-success btn-lg btn-block&quot;, icon = icon(&quot;database&quot;)), actionButton(&quot;neta&quot;,&quot;Network Analysis&quot;, class = &quot;btn-success btn-lg btn-block&quot;, icon = icon(&quot;circle-nodes&quot;)), br(),br() ) ) ) 3.4.2 Grouped comparisons Grouped comparisons contains integrative visualisation of multiple datasets. This page contains a table containing descriptions of each dataset, as well as integrative plots. Each item is contained within boxes, and their width can be adjusted by changing the width parameter. There are three plots displayed in the example: Dot plot showing gene expression changes. Dot plot showing scRNA gene expression. Dot plot showing differential gene expression of genes. shinydashboard::tabItem(tabName=&quot;tabmeta&quot;, br(), shiny::fluidRow( shinydashboard::box(status = &quot;primary&quot;, width = 12, title = &quot;Choose Datasets for Meta-Analysis&quot;, solidHeader = TRUE, ## description p(&quot;ADD TEXT HERE&quot;), hr(), # table containing information of datasets DT::dataTableOutput(&quot;meta_table&quot;), collapsible = TRUE), ), br(), # buttons fluidRow( column(12,offset = 0, shiny::actionButton(&quot;load&quot;, &quot;Plot Graphs&quot;, icon = icon(&quot;play-circle&quot;)), shiny::downloadButton(&quot;combineplot&quot;, &quot;Generate code&quot;), shiny::downloadButton(&quot;combineplots&quot;, &quot;Download Plots&quot;) ) ), br(), shiny::fluidRow( # dot plots for bulk and single RNA sequencing ## comment out plots that you don&#39;t need shinydashboard::box(width = 12, title = &quot;Naive&quot;, collapsible = TRUE, solidHeader = TRUE, status = &quot;primary&quot;, plotcombine_ui(&quot;dot&quot;), plothomescdot_ui(&quot;homespat&quot;) ) ), fluidRow( # DEG plots shinydashboard::box(width = 12, title = &quot;Differential Gene Analysis&quot;, collapsible = TRUE, solidHeader = TRUE, status = &quot;primary&quot;, deg_combine_ui(&quot;deg_plot&quot;)) ) ) 3.4.3 Individual Analysis The information and plots for a dataset can be displayed after selection. Different from previous pages, this page contains a dynamic UI that reacts to the user input (i.e.Â the dataset that users clicked in the table). This is achieved by the uiOutput() function, which tells Shiny when the pages should be rendered. The UI for each indiviual page is stored in a function shinypageUI(), which is called with different parameters in response to different datasets selected. ### this doesn&#39;t need to be altered shinydashboard::tabItem(tabName = &quot;tabdata&quot;, fluidRow( # a table that allows selection of a single dataset for visualisation shinydashboard::box(status = &quot;primary&quot;, solidHeader = TRUE, width = 12, title = &quot;Choose A Dataset for Individual Analysis&quot;, DT::dataTableOutput(&quot;dataset_table&quot;), helpText(&quot;Select one dataset for meta-analysis by clicking on rows. Click again to deselect a dataset.&quot;), collapsible = TRUE) ), br(), fluidRow( # a ui that is responsive to dataset selected uiOutput(&quot;shinypages&quot;) ) ) The components included in each dataset are shown below. The code for each component is shown after, but does not need to be altered, other than changing title for control and condition boxes. The shinypageUI() function: #&#39; The UI function for each individual dataset page #&#39; #&#39; @param datasetTitle The title for the page #&#39; @param includedeg A Boolean value stating whether to include differential expression plots and tables #&#39; @param volc_title The title for volcano plots #&#39; @param include_subtype A Boolean value stating whether to include plots for different sub-populations. #&#39; @param des_dir A directory for the description files. Default = NULL. #&#39; @param image_dir A directory for any images. Default = NULL. #&#39; @param includegoi A Boolean stating whether to include result count table for selected genes. shinypageUI &lt;- function(id, datasetTitle, includedeg = FALSE, volc_title = NULL, include_subtype = FALSE, des_dir = NULL, image_dir = NULL, includegoi = TRUE, include_count = TRUE) { shiny::fluidPage( shiny::fluidRow( # Description for dataset shinydashboard::box(title = datasetTitle, width = 12, status = &quot;primary&quot;, solidHeader = TRUE, if (is.null(des_dir) == FALSE) {includeHTML(des_dir)}, ## links description files if (is.null(image_dir) == FALSE) {img(src = image_dir, height = 150, width = 400)} ) ), br(), # buttons shiny::actionButton(NS(id, &quot;load&quot;), &quot;Plot Graphs&quot;, icon = icon(&quot;play-circle&quot;)), shiny::downloadButton(NS(id,&quot;report&quot;), &quot;Generate Code&quot;), shiny::downloadButton(NS(id,&quot;plots&quot;), &quot;Download Data&quot;), shiny::helpText(em(&quot;Load data before plotting.&quot;)), # plots using count data if (include_count == TRUE){ shiny::fluidRow( # gene expression dotplot shinydashboard::box(title = &quot;Control&quot;, ## change title status = &quot;primary&quot;, solidHeader = TRUE, plotly::plotlyOutput(NS(id, &quot;bulkseq_dots&quot;)), height = &quot;36em&quot; ), # line plot showing differential expression in different treatment groups shinydashboard::box(title = &quot;Condition&quot;, ## change title status = &quot;primary&quot;, solidHeader = TRUE, shiny::plotOutput(NS(id, &quot;bulkseq_lines&quot;)), height = &quot;36em&quot; ), br(), br() ) }, br(), # plots for experiments which divide samples into different groups e.g. different cell subtypes if (include_subtype == TRUE) { # line plots showing differential gene expression in different experiment groups in response to treatment shiny::fluidRow( shinydashboard::box(width = 12, title = &quot;Subtype Results&quot;, status = &quot;primary&quot;, solidHeader = TRUE, shiny::plotOutput(NS(id, &quot;bulkseq_lines_subtype&quot;)) ) ) },br(), # plots using differential expression data if (includedeg == TRUE) { shiny::fluidRow( shinydashboard::box(width = 6, title = &quot;Differential Gene Analysis&quot;, status = &quot;primary&quot;, solidHeader = TRUE, plotly::plotlyOutput(NS(id, &quot;deg_plot&quot;)), height = &quot;38em&quot;), # volcano plots shinydashboard::box(width = 6, title = volc_title, status = &quot;primary&quot;, solidHeader = TRUE, actionButton(NS(id, &quot;plotvolc&quot;), &quot;Plot Volcano Graphs&quot;), selectInput(NS(id, &quot;volc_pop&quot;), &quot;&quot;, choices = NULL, selected = &quot;&quot;), shiny::plotOutput(NS(id, &quot;volcanoplot&quot;), height = &quot;26em&quot;), height = &quot;38em&quot; ) ) },br(), # for displaying count data for genes selected if(includegoi == TRUE) { shiny::fluidRow( shinydashboard::box( width = 12, title = &quot;Result Table&quot;, status = &quot;primary&quot;, solidHeader = TRUE, DT::dataTableOutput(NS(id,&quot;goi_table&quot;)) ) ) },br(), # for displaying differential expression data if(includedeg == TRUE) { shiny::fluidRow( shinydashboard::box(width = 12, title = &quot;Differential Analysis Table&quot;, status = &quot;primary&quot;, solidHeader = TRUE, selectInput(NS(id, &quot;contrast&quot;), &quot;&quot;, choices = NULL, selected = &quot;&quot;), DT::dataTableOutput(NS(id, &quot;contrast_table&quot;)) ) ) } ) } 3.4.4 Network page We also provide an option for basic network analyses. The network tab contains a description box, a gene search bar, a network, a result table containing differential expression values, and a table containing information for datasets from RNA-seq and microarray studies. On the server-side, this network is generated from STRING DB and reconstructed with visNetwork. In this app, users can also colour/annotate the network based on experimental results. # UI for the network page shinydashboard::tabItem(tabName = &quot;tabnet&quot;, fluidRow( shinydashboard::box(title = &quot;Network Analysis&quot;, ## modify title as needed width = 12, status = &quot;primary&quot;, solidHeader = TRUE, ## insert description files includeHTML(&quot;des/network.Rhtml&quot;) ) ),br(), # gene search bar and filter bar fluidRow( column(width = 3, selectizeInput( inputId = &quot;gene_symbols&quot;, label = &quot;Enter Query Gene Symbols:&quot;, multiple = TRUE, choices = NULL ) ), column(width = 3, selectInput(&quot;pop&quot;, &quot;Select Experiment:&quot;, ## customize choices of datasets for different modes of annotation choices = c(&quot;Pain Enrichment Score&quot;, unique(data$experiment_id)), selected = &quot;Diabetes&quot;) ## choose one of your datasets ), column(width = 3,br(), actionButton(&quot;submit&quot;, &quot;Construct Network&quot;)), style = &quot;margin-top:20px;&quot; ), # render network fluidRow( shinydashboard::box(width = 12, status = &quot;primary&quot;, solidHeader = TRUE, title = &quot;Network&quot;, column(width = 10, visNetwork::visNetworkOutput(&quot;network&quot;, height = &quot;435px&quot;) ), height = &quot;38em&quot;, # legends column(width = 2, uiOutput(&quot;netlegend&quot;) ) ), ), br(), # result table fluidRow( shinydashboard::box(width = 12, status = &quot;primary&quot;, solidHeader = TRUE, title = &quot;Result Table&quot;, tabsetPanel( tabPanel( &quot;DEG Table&quot;, DT::dataTableOutput(&quot;contrast_table&quot;) ), tabPanel(&quot;Nodes&quot;, DT::dataTableOutput(&quot;protein_table&quot;) ) ), height = &quot;38em&quot; ) ),br(), # a table containing descriptions of experiments involved, their methods and treatment groups fluidRow( shinydashboard::box(status = &quot;primary&quot;, solidHeader = TRUE, width = 12, title = &quot;Datasets&quot;, column(width = 12, ## Insert table html files includeHTML(&quot;des/datatable.html&quot;) ), collapsible = TRUE), ) ) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
